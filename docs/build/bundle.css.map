{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Header.svelte",
    "../../Schedule.svelte",
    "../../TrackNav.svelte",
    "../../Tracks.svelte",
    "../../WorkCard.svelte",
    "../../Works.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { selectedTrack } from \"./stores.js\";\n  import { showName, performanceDays } from \"./config.js\";\n\n  const formatTime = new Intl.DateTimeFormat([], {\n    hour12: false,\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  }).format;\n\n  const formatDate = new Intl.DateTimeFormat([], {\n    weekday: \"short\",\n    day: \"numeric\",\n    month: \"short\",\n    year: \"numeric\",\n    timeZoneName: \"short\"\n  }).format;\n\n  function clearHash() {\n    history.pushState(\"\", document.title, window.location.pathname);\n  }\n</script>\n\n<style>\n  h1 {\n    color: white;\n  }\n  h2 {\n    color: #ddd;\n  }\n</style>\n\n<section class=\"hero {$selectedTrack}-bg\" on:click={clearHash}>\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h1 class=\"title\">{showName}</h1>\n      <h2 class=\"subtitle\">\n        Work in Progress Show - Goldsmiths\n        {#each performanceDays as performanceDay}\n          <br />\n          {formatTime(performanceDay.startDate)} - {formatTime(performanceDay.endDate)}\n          {formatDate(performanceDay.endDate)}\n        {/each}\n      </h2>\n    </div>\n  </div>\n</section>\n",
    "<script>\n  import { ascending } from \"d3-array\";\n\n  import { formatDate, formatTime, formatDateTime } from \"./helpers.js\";\n  import { performanceDays, trackBySlug } from \"./config.js\";\n  import { selectedTrack, selectedDay, performances, tick } from \"./stores.js\";\n\n  $: selectedTrackPerformances = $performances.filter(\n    d => d.track.slug === $selectedTrack\n  );\n\n  function isPast(performance) {\n    return false;\n  }\n\n  function isActive(performance) {\n    return false;\n  }\n</script>\n\n<style>\n  .panel-heading,\n  .panel-heading a:hover {\n    color: white;\n  }\n\n  .panel-heading a {\n    color: #ccc;\n  }\n\n  .track-name {\n    padding: 0.1em 0.5em;\n    cursor: pointer;\n  }\n\n  time {\n    margin-right: 8px;\n  }\n\n  .artist {\n    font-style: italic;\n  }\n\n  .is-past time {\n    text-decoration: line-through;\n  }\n\n  .is-past .project-title,\n  .is-past .artist {\n    color: lightgray;\n  }\n\n  .performance.is-active {\n    border-top: 1px solid black;\n  }\n\n  .performance.is-active .project-title {\n    font-weight: bold;\n  }\n</style>\n\n<h2 name=\"schedule\" class=\"title is-2\">Schedules</h2>\n\n<div class=\"content\">\n  <p />\n  <p>\n    We aim to stick to the schedule below. All times are in your local timezone,\n    where the time is currently {formatDateTime($tick)}.\n  </p>\n</div>\n\n<div class=\"anchor-link\" id=\"schedule\" />\n<nav class=\"panel\">\n  <p class=\"panel-heading {$selectedTrack}-bg\">\n    {trackBySlug.get($selectedTrack).name} Schedule\n    <br />\n    <span style=\"white-space: nowrap\">\n      {#if trackBySlug.get($selectedTrack).zoomUrl}\n        <a href={trackBySlug.get($selectedTrack).zoomUrl}>\n          {trackBySlug.get($selectedTrack).zoomUrl}\n        </a>\n      {:else}Zoom link will appear here shortly before event{/if}\n    </span>\n  </p>\n\n  {#each selectedTrackPerformances as performance, i}\n    <a\n      href=\"#{performance.work.slug}\"\n      class=\"panel-block performance\"\n      class:is-past={isPast(performance)}\n      class:is-active={isActive(performance)}>\n      <time>{formatTime(performance.startTime)}</time>\n      <span class=\"project-title\">{performance.work.title}</span>\n      <span class=\"artist is-hidden-mobile\">\n        &nbsp;â€”&nbsp; {performance.work.artist}\n      </span>\n    </a>\n  {/each}\n</nav>\n",
    "<script>\n  import { selectedTrack, selectedDay } from \"./stores.js\";\n  import { formatDate } from \"./helpers.js\";\n  import { showName, performanceDays, trackBySlug } from \"./config.js\";\n\n  let tabs = performanceDays[0].tracks;\n\n  $: tracks = trackBySlug.get($selectedTrack).day.tracks;\n</script>\n\n<style>\n  .track-nav {\n    position: sticky;\n    top: 0;\n    z-index: 10;\n    background-color: white;\n    border-bottom: 2px solid #ccc;\n  }\n\n  .row {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n\n  .item {\n    color: black;\n    background: #eee;\n    padding: 0.3em 1em;\n    cursor: pointer;\n    flex-grow: 0;\n    min-width: 140px;\n  }\n\n  .item-track {\n    border-width: 0;\n    border-left-width: 8px;\n    border-style: solid;\n    background-color: #eee;\n  }\n\n  .is-active {\n    font-weight: bold;\n    color: white;\n  }\n</style>\n\n<div class=\"track-nav\">\n  <div class=\"container\">\n    <div class=\"row days\">\n      {#each performanceDays as performanceDay}\n        <a\n          href=\"#schedule\"\n          class=\"item item-day {performanceDay === $selectedDay ? `${$selectedTrack}-bg` : ''}\"\n          class:is-active={performanceDay === $selectedDay}\n          on:click={() => {\n            selectedTrack.set(performanceDay.tracks[0].slug);\n          }}>\n          {formatDate(performanceDay.startDate)}\n        </a>\n      {/each}\n    </div>\n\n    <div class=\"row tracks\">\n      {#each tracks as track}\n        <a\n          href=\"#schedule\"\n          class=\"item item-track {track.slug}-bd {track.slug}-{track.slug === $selectedTrack ? 'bg' : ''}\"\n          class:is-active={track.slug === $selectedTrack}\n          on:click={() => selectedTrack.set(track.slug)}>\n          {track.shortName || track.name}\n        </a>\n      {/each}\n    </div>\n\n  </div>\n</div>\n",
    "<script>\n  import { ascending } from \"d3-array\";\n\n  import { formatDate } from \"./helpers.js\";\n  import { performanceDays } from \"./config.js\";\n  import { selectedTrack } from \"./stores.js\";\n</script>\n\n<style>\n  .track {\n    border-left-width: 1em;\n    border-left-style: solid;\n    padding-left: 0.5em;\n    min-height: 5em;\n    margin-bottom: 1em;\n  }\n</style>\n\n<div class=\"tracks\">\n\n  <h2 class=\"title is-2\">Tracks</h2>\n  <div class=\"content\">\n    <p>\n      Taking place over the course of two days, online audiences will be able to\n      dip in and out of five channels with their own Zoom meeting link. On the\n      Friday, discover the works by themes and on Saturday by their technical\n      aspect.\n    </p>\n  </div>\n\n  <div class=\"columns\">\n    {#each performanceDays as performanceDay, i}\n      <div class=\"column\">\n        <h3 class=\"title is-4\">\n          Day {i + 1} - {formatDate(performanceDay.startDate)}\n        </h3>\n        {#each performanceDay.tracks as track, j}\n          <div class=\"track {track.slug}-bd\">\n\n            <div class=\"content\">\n              <div class=\"anchor-link\" id={track.slug} />\n              <p>\n                <b>{track.name}</b>\n                {#if track.desc}\n                  <br />\n                  {track.desc}\n                {/if}\n                <br />\n                {#if track.zoomUrl}\n                  <a href={track.zoomUrl}>{track.zoomUrl}</a>\n                {:else}Zoom link will appear here shortly before event{/if}\n              </p>\n            </div>\n          </div>\n        {/each}\n      </div>\n    {/each}\n  </div>\n\n</div>\n",
    "<script>\n  import SocialLink from \"./SocialLink.svelte\";\n  import { formatDateTime } from \"./helpers\";\n  import { selectedTrack } from \"./stores\";\n\n  export let work;\n</script>\n\n<style>\n  .card {\n    margin-top: 2em;\n  }\n\n  time {\n    font-weight: bold;\n  }\n\n  .track {\n    padding: 0.1em 1em;\n    color: white;\n  }\n\n  img {\n    object-fit: cover;\n    background-color: #ccc;\n  }\n</style>\n\n<div class=\"card\">\n  <div class=\"card-image\">\n    <div class=\"anchor-link\" id={work.slug} />\n    <figure class=\"image is-2by1\">\n      <img src={work.thumbUrl} alt={work.title} loading=\"lazy\" />\n    </figure>\n  </div>\n  <div class=\"card-content\">\n    <div class=\"content\">\n      <h4 class=\"title is-4\">{work.title}</h4>\n\n      <div>\n        <span class=\"tag\">{work.form}</span>\n      </div>\n\n      <ul>\n        {#each work.performances as p}\n          <li>\n            <div>\n              Track:\n              <a\n                href=\"#schedule\"\n                class=\"track {p.track.slug}-bg\"\n                on:click={() => selectedTrack.set(p.track.slug)}>\n                {p.track.name}\n              </a>\n            </div>\n            <div>\n              Start time:\n              <time datetime={p.startTime.toISOString()}>\n                {formatDateTime(p.startTime)}\n              </time>\n            </div>\n          </li>\n        {/each}\n      </ul>\n\n      <div>{work.desc || 'No description provided'}</div>\n      {#if work.url}\n        <div>\n          <a href={work.url} target=\"_blank\">More info</a>\n        </div>\n      {/if}\n    </div>\n\n    <div class=\"media\">\n      <!-- \n      <div class=\"media-left\">\n        <figure class=\"image is-48x48\">\n          <img\n            src=\"https://via.placeholder.com/96x96\"\n            alt={work.artist}\n            loading=\"lazy\" />\n        </figure>\n      </div>\n     -->\n      <div class=\"media-content\">\n        <p class=\"title is-5\">{work.artist}</p>\n        <SocialLink kind=\"instagram\" value={work.instagram} />\n        <SocialLink kind=\"twitter\" value={work.twitter} />\n        <SocialLink kind=\"facebook\" value={work.facebook} />\n        <SocialLink kind=\"website\" value={work.website} />\n      </div>\n    </div>\n\n  </div>\n</div>\n",
    "<script>\n  import { ascending, groups } from \"d3-array\";\n  import { chunk } from \"lodash-es\";\n  import WorkCard from \"./WorkCard.svelte\";\n  import { works } from \"./stores\";\n\n  const NUM_COLUMNS = 3;\n  const introSlug = \"introduction-to-computational-arts-ma\";\n\n  let worksSorted;\n\n  $: if ($works.length) {\n    worksSorted = $works.slice().sort((a, b) => ascending(a.slug, b.slug));\n    const introIdx = worksSorted.map(d => d.slug).indexOf(introSlug);\n    worksSorted.unshift(worksSorted[introIdx]);\n  }\n  $: worksInCols = chunk(worksSorted, NUM_COLUMNS);\n</script>\n\n<style>\n  .works {\n    margin-top: 4em;\n  }\n</style>\n\n<div class=\"works\">\n  <h2 class=\"title is-2\">All Works</h2>\n  <p class=\"subtitle is-7\">In alphabetical order by title</p>\n\n  {#each worksInCols as row}\n    <div class=\"columns\">\n      {#each row as work}\n        <div class=\"column\">\n          <WorkCard {work} />\n        </div>\n      {/each}\n\n      {#each new Array(NUM_COLUMNS - row.length) as filler}\n        <div class=\"column\" />\n      {/each}\n    </div>\n  {/each}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAwBE,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,KAAK,AACd,CAAC,AACD,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,IAAI,AACb,CAAC;ACRD,4CAAc,CACd,6BAAc,CAAC,gBAAC,MAAM,AAAC,CAAC,AACtB,KAAK,CAAE,KAAK,AACd,CAAC,AAED,6BAAc,CAAC,CAAC,eAAC,CAAC,AAChB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,WAAW,8BAAC,CAAC,AACX,OAAO,CAAE,KAAK,CAAC,KAAK,CACpB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,IAAI,8BAAC,CAAC,AACJ,YAAY,CAAE,GAAG,AACnB,CAAC,AAED,OAAO,8BAAC,CAAC,AACP,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,uBAAQ,CAAC,IAAI,eAAC,CAAC,AACb,eAAe,CAAE,YAAY,AAC/B,CAAC,AAED,uBAAQ,CAAC,6BAAc,CACvB,uBAAQ,CAAC,OAAO,eAAC,CAAC,AAChB,KAAK,CAAE,SAAS,AAClB,CAAC,AAED,YAAY,UAAU,8BAAC,CAAC,AACtB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AAC7B,CAAC,AAED,YAAY,yBAAU,CAAC,cAAc,eAAC,CAAC,AACrC,WAAW,CAAE,IAAI,AACnB,CAAC;AC/CD,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,MAAM,CAChB,GAAG,CAAE,CAAC,CACN,OAAO,CAAE,EAAE,CACX,gBAAgB,CAAE,KAAK,CACvB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC/B,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,UAAU,AAC7B,CAAC,AAED,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,KAAK,CAAC,GAAG,CAClB,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,CAAC,CACZ,SAAS,CAAE,KAAK,AAClB,CAAC,AAED,WAAW,cAAC,CAAC,AACX,YAAY,CAAE,CAAC,CACf,iBAAiB,CAAE,GAAG,CACtB,YAAY,CAAE,KAAK,CACnB,gBAAgB,CAAE,IAAI,AACxB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,KAAK,AACd,CAAC;ACnCD,MAAM,cAAC,CAAC,AACN,iBAAiB,CAAE,GAAG,CACtB,iBAAiB,CAAE,KAAK,CACxB,YAAY,CAAE,KAAK,CACnB,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,GAAG,AACpB,CAAC;ACND,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,GAAG,AACjB,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,KAAK,CAAC,GAAG,CAClB,KAAK,CAAE,KAAK,AACd,CAAC,AAED,GAAG,cAAC,CAAC,AACH,UAAU,CAAE,KAAK,CACjB,gBAAgB,CAAE,IAAI,AACxB,CAAC;ACLD,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,GAAG,AACjB,CAAC"
}